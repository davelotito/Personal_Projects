######## Create a FOR LOOP ########
# Create a simple for loop
for (i in 1:10){
    print('This is a R Studio Test in VSCode :) !')
}

#################### END ########################
# Assign vector to variable
hello <- c(1,2,3)
print(hello)

######## UNDERSTANDING 1-D VECTORS & MATRIX ########

# Poker winnings from Monday to Friday
poker_vector <- c(140, -50, 20, -120, 240)
print(poker_vector)

# Roulette winnings from Monday to Friday
roulette_vector <- c(-24, -50, 100, -350, 10)
print(roulette_vector)

# The variable days_vector
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")

names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector

print(days_vector)

A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)

# Take the sum of A_vector and B_vector
total_vector <- A_vector + B_vector
  
# Print out total_vector
print(total_vector)


# Define a new variable based on a selection
poker_midweek <- poker_vector[c(1,5)]
print(poker_midweek)


# Which days did you make money on poker?
selection_vector <- poker_vector > 0

# Select from poker_vector these days
poker_winning_days <- poker_vector[selection_vector]

# Box office Star Wars (in millions!)
new_hope <- c(460.998, 314.4)
empire_strikes <- c(290.475, 247.900)
return_jedi <- c(309.306, 165.8)


# Create box_office (combine 3 vectors into 1)
box_office <- c(new_hope, empire_strikes, return_jedi)
print(box_office)


# Construct star_wars_matrix
star_wars_matrix <- matrix(box_office, byrow=TRUE, nrow=3)
print(star_wars_matrix)

# Construct matrix
star_wars_matrix <- matrix(c(new_hope, empire_strikes, return_jedi), nrow = 3, byrow = TRUE)

# Vectors region and titles, used for naming
region <- c("US", "non-US")
titles <- c("A New Hope", "The Empire Strikes Back", "Return of the Jedi")

# Name the columns with region
colnames(star_wars_matrix) <- region

# Name the rows with titles
rownames(star_wars_matrix) <- titles

# Print out star_wars_matrix
print(star_wars_matrix)

# Calculate worldwide box office figures
worldwide_vector <- rowSums(star_wars_matrix)
print(worldwide_vector)


# Bind the new variable worldwide_vector as a column to star_wars_matrix
all_wars_matrix <- cbind(star_wars_matrix, worldwide_vector)
print(all_wars_matrix)

# Total revenue for US and non-US
total_revenue_vector <- colSums(all_wars_matrix)
  
# Print out total_revenue_vector
print(total_revenue_vector)

### EXAMPLE ###
all_wars_matrix[1,2] #selects the element at the first row and second column.

# Select the non-US revenue for all movies
non_us_all <- all_wars_matrix[,2] # Select the non-US revenue for all movies (the entire second column of all_wars_matrix) #nolint
print(non_us_all)

#################### END EXAMPLE ########################

# Average non-US revenue
mean(non_us_all)
  
# Select the non-US revenue for first two movies
non_us_some <- all_wars_matrix[1:2,2]
  
# Average non-US revenue for first two movies
mean(non_us_some)

# Estimate the visitors
visitors <- all_wars_matrix / 5 # Divide all_wars_matrix by 5, giving you the number of visitors in millions. Assign the resulting matrix to visitors        #nolint
  
# Print the estimate to the console
print(visitors)


# US visitors
us_visitors <- visitors[,1] # Select first column

# Average number of US visitors
mean(us_visitors)

#################### END ########################


#################### LEARNING ARTHMATIC & FACTORS ########################

# Sex vector
sex_vector <- c("Male", "Female", "Female", "Male", "Male")

# Convert sex_vector to a factor
factor_sex_vector <- factor(sex_vector) # The function factor() will encode the vector as a factor (#nolint)

# Print out factor_sex_vector
print(factor_sex_vector)

# Animals
animals_vector <- c("Elephant", "Giraffe", "Donkey", "Horse")
factor_animals_vector <- factor(animals_vector)
factor_animals_vector

# Temperature
temperature_vector <- c("High", "Low", "High","Low", "Medium")
factor_temperature_vector <- factor(temperature_vector, order = TRUE, levels = c("Low", "Medium", "High")) #nolint
factor_temperature_vector

# Code to build factor_survey_vector
survey_vector <- c("M", "F", "F", "M", "M")
factor_survey_vector <- factor(survey_vector) # The function factor() will encode the vector as a factor (#nolint)

# Specify the levels of factor_survey_vector
levels(factor_survey_vector) <- c("Female", "Male") # The function levels() allows you to label/add clarity. (#nolint)

factor_survey_vector

# Generate summary for survey_vector
summary(survey_vector) # The function summary() gives a quick overview of the contents of a variable (#nolint)

# Generate summary for factor_survey_vector
summary(factor_survey_vector) # The function summary() gives a quick overview of the contents of a variable (#nolint)


####### Ordering matrix with factor ######

# Create speed_vector
speed_vector <- c("medium", "slow", "slow", "medium", "fast")

# Convert speed_vector to ordered factor vector
factor_speed_vector <- factor(speed_vector, ordered=TRUE, levels = c("slow", "medium", "fast")) #nolint

# Print factor_speed_vector
factor_speed_vector
summary(factor_speed_vector)



#################### END ########################